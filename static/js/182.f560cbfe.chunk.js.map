{"version":3,"file":"static/js/182.f560cbfe.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Styled.js","components/Filter/Filter.jsx","components/Loader/Styled.js","components/Loader/Loader.jsx","components/SignUpForm/SignUpForm.jsx","components/SignInForm/SignInForm.jsx","pages/SignInPage.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/selectors';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    }\n    if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    if (\n      contacts.filter(\n        element => element.name.toLowerCase() === contact.name.toLowerCase()\n      ).length > 0\n    ) {\n      return Notiflix.Notify.warning(`${contact.name} is already in contacts`);\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl>\n        <FormLabel color=\"light\">Name</FormLabel>\n        <Input\n          mt=\"10px\"\n          variant=\"outline\"\n          placeholder=\"Name\"\n          bg=\"light\"\n          size=\"md\"\n          width=\"300px\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <FormLabel display=\"flex\" flexDirection=\"column\" color=\"light\">\n          Number\n        </FormLabel>\n        <Input\n          mt=\"10px\"\n          variant=\"outline\"\n          placeholder=\"Number\"\n          bg=\"light\"\n          size=\"md\"\n          width=\"300px\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button\n          mt=\"10px\"\n          variant=\"solid\"\n          bg=\"primary\"\n          _active={{ background: 'hoverBtn' }}\n          _hover={{ background: 'hoverBtn' }}\n          color=\"dark\"\n          size=\"md\"\n          w=\"100px\"\n          type=\"submit\"\n        >\n          Add\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default ContactsForm;\n\nContactsForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport PropTypes from 'prop-types';\nimport { Box, Button, List, ListItem, Text } from '@chakra-ui/react';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterContacts = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n  const filteredContacts = onFilterContacts();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <List\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        className=\"contacts-list\"\n      >\n        {filteredContacts.map(contact => {\n          return (\n            <ListItem\n              display=\"flex;\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              mb=\"10px\"\n              key={contact.id}\n            >\n              <Text fontSize=\"20px\" color=\"light\">\n                {contact.name}: {contact.number}\n              </Text>\n              <Button\n                variant=\"solid\"\n                bg=\"primary\"\n                _active={{ background: 'hoverBtn' }}\n                _hover={{ background: 'hoverBtn' }}\n                color=\"dark\"\n                size=\"md\"\n                w=\"100px\"\n                type=\"submit\"\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                Delete\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\n// export const FilterContacts = styled.input`\n//   width: 100%;\n//   padding: 20px 25px;\n//   margin-top: 20px;\n//   margin-bottom: 20px;\n//   font-size: 35px;\n//   font-weight: 400;\n//   border-radius: 50px;\n// `;\n\nexport const FilterText = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 35px;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/selectors';\nimport { FilterText } from './Styled';\nimport { Input } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const setFilterContacts = event => {\n    const { value } = event.target;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <label htmlFor=\"filter\">\n      <FilterText>Find contacts by name</FilterText>\n      <Input\n        variant=\"outline\"\n        placeholder=\"Find contacts by name\"\n        bg=\"light\"\n        size=\"md\"\n        width=\"300px\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={setFilterContacts}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { LoaderBox } from './Styled';\n\nfunction Loader() {\n  return (\n    <LoaderBox>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderBox>\n  );\n}\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/users/operations';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  InputGroup,\n  Icon,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nfunction SignUpForm({ isLoading }) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const finalData = {\n      name: formData.name,\n      email: formData.email,\n      password: formData.password,\n    };\n    console.log(finalData);\n    dispatch(signUp(finalData));\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormControl>\n          <FormLabel color=\"light\">Name:</FormLabel>\n          <Input\n            mt=\"10px\"\n            variant=\"outline\"\n            placeholder=\"Name\"\n            bg=\"light\"\n            size=\"md\"\n            width=\"300px\"\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          ></Input>\n          <FormLabel color=\"light\">Email:</FormLabel>\n          <Input\n            mt=\"10px\"\n            variant=\"outline\"\n            placeholder=\"Email\"\n            bg=\"light\"\n            size=\"md\"\n            width=\"300px\"\n            type=\"text\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          ></Input>\n          <FormLabel color=\"light\">Password:</FormLabel>\n          <InputGroup>\n            <Input\n              mt=\"10px\"\n              variant=\"outline\"\n              bg=\"light\"\n              size=\"md\"\n              width=\"300px\"\n              type={showPassword ? 'text' : 'password'}\n              min={7}\n              placeholder=\"********\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n            <InputRightElement width=\"3rem\">\n              <Button h=\"1.5rem\" size=\"sm\" onClick={handlePasswordVisibility}>\n                {showPassword ? (\n                  <Icon as={ViewIcon} />\n                ) : (\n                  <Icon as={ViewOffIcon} />\n                )}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          <Button\n            mt=\"10px\"\n            variant=\"solid\"\n            bg=\"primary\"\n            _active={{ background: 'hoverBtn' }}\n            _hover={{ background: 'hoverBtn' }}\n            color=\"dark\"\n            size=\"md\"\n            w=\"100px\"\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Sign Up\n          </Button>\n        </FormControl>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUpForm;\n\nSignUpForm.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n  }),\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signIn } from 'redux/users/operations';\nimport {\n  Button,\n  FormLabel,\n  Icon,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nfunction SignInForm({ isLoading }) {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const finalData = {\n      email: formData.email,\n      password: formData.password,\n    };\n    console.log(finalData);\n    dispatch(signIn(finalData));\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormLabel color=\"light\">Email:</FormLabel>\n        <Input\n          mt=\"10px\"\n          variant=\"outline\"\n          placeholder=\"Email\"\n          bg=\"light\"\n          size=\"md\"\n          width=\"300px\"\n          type=\"text\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n        ></Input>\n        <FormLabel color=\"light\">Password:</FormLabel>\n        <InputGroup>\n          <Input\n            mt=\"10px\"\n            variant=\"outline\"\n            bg=\"light\"\n            size=\"md\"\n            width=\"300px\"\n            type={showPassword ? 'text' : 'password'}\n            min={7}\n            placeholder=\"********\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          ></Input>\n          <InputRightElement width=\"3rem\">\n            <Button h=\"1.5rem\" size=\"sm\" onClick={handlePasswordVisibility}>\n              {showPassword ? (\n                <Icon as={ViewIcon} />\n              ) : (\n                <Icon as={ViewOffIcon} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n\n        <Button\n          mt=\"10px\"\n          variant=\"solid\"\n          bg=\"primary\"\n          _active={{ background: 'hoverBtn' }}\n          _hover={{ background: 'hoverBtn' }}\n          color=\"dark\"\n          size=\"md\"\n          w=\"100px\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          Sign In\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignInForm;\n\nSignInForm.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n  }),\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { SignInForm } from 'components';\n\nfunction SignInPage() {\n  const { isLoading, error, user } = useSelector(state => state.userData);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user?.email) return;\n\n    navigate('/contacts');\n  }, [user, navigate]);\n\n  return (\n    <div>\n      <h1>Please, log in !</h1>\n      {error.length > 0 && <p>Some error occured... With message {error}</p>}\n      <SignInForm isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"names":["useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","evt","target","value","reset","onSubmit","preventDefault","contact","filter","element","toLowerCase","length","Notiflix","addContact","color","mt","variant","placeholder","bg","size","width","type","onChange","pattern","title","required","display","flexDirection","_active","background","_hover","w","getFilter","filteredContacts","includes","justifyContent","alignItems","className","map","mb","fontSize","onClick","deleteContact","id","FilterText","styled","htmlFor","event","filterContact","isLoading","email","password","formData","setFormData","showPassword","setShowPassword","e","prevState","finalData","console","log","signUp","autoComplete","min","h","as","ViewIcon","ViewOffIcon","disabled","signIn","state","userData","error","user","navigate","useNavigate","useEffect"],"sourceRoot":""}